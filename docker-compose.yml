services:
  service_dsgvobanner:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    container_name: service_dsgvobanner
    restart: unless-stopped
    ports:
      - "127.0.0.1:3001:3001"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.service_dsgvobanner.loadbalancer.server.port=3001"
      - "traefik.http.routers.service_dsgvobanner.rule=Host(`dsgvobanner.plan-p.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.service_dsgvobanner.priority=10"
      - "traefik.http.routers.service_dsgvobanner.entrypoints=websecure"
      - "traefik.http.routers.service_dsgvobanner.tls=true"
      - "traefik.http.routers.service_dsgvobanner.tls.certresolver=http-resolver"
      - "monitor.category=website"
      - "monitor.project=dsgvobanner"
    networks:
      - db_dsgvobanner
      - proxy
    depends_on:
      - db_dsgvobanner
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request({host:'localhost',port:3001,path:'/'}, r=>{process.exit(0)}).on('error',()=>process.exit(1)).end()"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  web_dsgvobanner:
    build:
      context: ./project
      dockerfile: project.dockerfile
    container_name: web_dsgvobanner
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.web_dsgvobanner.loadbalancer.server.port=80"
      - "traefik.http.routers.web_dsgvobanner.rule=Host(`dsgvobanner.plan-p.com`)"
      - "traefik.http.routers.web_dsgvobanner.priority=5"
      - "traefik.http.routers.web_dsgvobanner.entrypoints=websecure"
      - "traefik.http.routers.web_dsgvobanner.tls=true"
      - "traefik.http.routers.web_dsgvobanner.tls.certresolver=http-resolver"
      - "monitor.category=website"
      - "monitor.project=dsgvobanner"
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  db_dsgvobanner:
    image: mariadb:11
    container_name: db_dsgvobanner
    restart: unless-stopped
    ports:
      - "127.0.0.1:3318:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - /data/databases/dsgvobanner:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db_dsgvobanner
      - db_backup
    labels:
      - "monitor.category=database"
      - "monitor.project=dsgvobanner"

networks:
  db_dsgvobanner:
    name: db_dsgvobanner
    driver: bridge
  db_backup:
    external: true
  proxy:
    external: true
